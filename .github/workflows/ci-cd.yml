name: CI/CD Pipeline

on:
    push:
        branches:
            - main

env:
    AWS_REGION: eu-central-1
    ECR_ACCOUNT_URL: 980921758343.dkr.ecr.eu-central-1.amazonaws.com

jobs:
    infra-base:
        name: Terraform "base" infrastructure
        runs-on: ubuntu-latest
        steps:
          - name: Checkout repo
            uses: actions/checkout@v3
          
          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v2
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ env.AWS_REGION }}
          - name: Ensure S3 backend bucket exists
            run: |
              aws s3api head-bucket --bucket drawzy-terraform-state-dev -- region ${ env.AWS_REGION } \
              || aws s3api create-bucket \
                --bucket drawzy-terraform-state-dev \
                --region ${ env.AWS_REGION } \
                --create-bucket-configuration LocationConstraint=${ env.AWS_REGION }
          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v2
            with:
              terraform_wrapper: false
          - name: Terraform init
            working-directory: terraform/environments/dev
            run: |
              terraform init \
               -backend-config="bucket=drawzy-terraform-state-dev" \
               -backend-config="key=terraform.tfstate" \
               -backend-config="region=${{ env.AWS_REGION }}" \
               -backend-config="dynamodb_table=drawzy-terraform-state-locks" 
          - name: Select Terraform workspace
            working-directory: terraform/environments/dev
            run: terraform workspace select -or-create dev
          - name: Terraform Apply (rds, ecr)
            working-directory: terraform/environments/dev
            run: |
             terraform apply -auto-approve \
             -target=module.rds_mysql \
             -target=module.ecr 
          - name: Get RDS endpoint
            id: endpoint
            run: |
              echo "DB_URL=$(terraform output -raw DATABASE_URL)" >> $GITHUB_ENV
            working-directory: terraform/environments/dev
          - name: Write .env 
            run: |
              echo "DATABASE_URL=${{ env.DB_URL }}" > backend/.env


    build_and_push:
        name: Build & Push Docker Images
        needs: infra-base
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}
            - name: Login to ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
            - name: Build and Docker backend image
              run: |
                docker build \
                -t $ECR_ACCOUNT_URL/drawzy-backend:latest \
                -f ./backend/Dockerfile \
                ./backend
                docker push $ECR_ACCOUNT_URL/drawzy-backend:latest
            - name: Build and Docker frontend image
              run: |
                docker build \
                -t $ECR_ACCOUNT_URL/drawzy-frontend:latest \
                -f ./frontend/Dockerfile \
                ./frontend
                docker push $ECR_ACCOUNT_URL/drawzy-frontend:latest
    terraform:
        name: Terraform deploying
        needs: [infra-base, build_and_push]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
               terraform_wrapper: false
            
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}

            - name: Terraform fmt (auto-format)
              working-directory: terraform/environments/dev
              run: terraform fmt -recursive
            - name: Terraform fmt-check
              working-directory: terraform/environments/dev
              run: terraform fmt -check -recursive
              
            - name: Terraform init
              working-directory: terraform/environments/dev
              run: |
                terraform init -reconfigure \
                 -backend-config="bucket=drawzy-terraform-state-dev" \
                 -backend-config="key=terraform.tfstate" \
                 -backend-config="region=${{ env.AWS_REGION }}" \
                 -backend-config="dynamodb_table=drawzy-terraform-state-locks" \
            - name: Select Terraform workspace
              working-directory: terraform/environments/dev
              run: terraform workspace select -or-create dev
            - name: Terraform Validate
              working-directory: terraform/environments/dev
              run: terraform validate
            - name: Terraform plan
              run: terraform plan
              working-directory: terraform/environments/dev
            - name: Terraform apply
              run: terraform apply -auto-approve
              working-directory: terraform/environments/dev
            